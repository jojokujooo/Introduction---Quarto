---
title: Commentaires et Affichage
---
### Commentaires

<p id=textIntro>Les <strong>commentaires</strong> sont utilisés pour expliquer le code. Ils sont utiles pour vous mais surtout pour ceux qui vont lire votre code. Ils commencent par un <strong>#</strong> et prennent toute une ligne sauf s'ils suivent une instruction. <strong>A noter qu'ils ne sont pas comptabilisés quand on exécute du code</strong><br>
<strong>Alors simplifiez la vie de votre prof et commentez votre code !</strong></p>

```{python}
# Voici un commentaire

variableTest = 2 # Voici un commentaire qui suit une ligne de code
```

### Affichage
<p id=textIntro>En Python, pour afficher du texte, le contenu d'une variable ou même les deux, on utilise la fonction <strong>print().</strong>  </p>

```{python}
print("Mes élèves sont les meilleurs") # Affiche le texte entre les guillemets
print(variableTest) # Affiche la valeur de la variable
print("Mes élèves sont les meilleurs", variableTest) # Affiche le texte entre les guillemets et la valeur de la variable
```
### Formatage
<p id=textIntro>Pour afficher du texte ainsi que des variables dans une même ligne il existe aussi une autre méthode que l'on appelle les <strong>f-strings</strong>. En utilisant les <strong>f-strings</strong>, vous pouvez insérer des variables directement dans une chaîne de caractères en plaçant leur nom <strong>entre des accolades {}</strong> à l'intérieur de la chaîne. Cela améliore grandement la lisibilité. Mais pour cela il faut placer un <strong>f</strong> DEVANT la chaîne de caractères. Voici un exemple :</p>

```{python}
prenom = "Johann"
age = "22"
print(f"Je m'appelle {prenom} et j'ai {age} ans")
```

<p id=textIntro>L'utilisation de la méthode <strong>.format()</strong> en Python permet aussi d'insérer des variables dans des chaînes de caractères en spécifiant des <strong>emplacements réservés</strong> (placeholders) avec des accolades {} , puis en utilisant la méthode <strong>.format()</strong> après la chaine de caractères pour remplacer ces emplacements par les valeurs des variables.</p>

```{python}
# Utilisation de format()
print("Bonjour, je m'appelle {} et j'ai {} ans.".format(prenom, age))

```

### Calcul et arrondi
<p id=textIntro> Dans votre vie de programmeur, vous effectuerez souvent des calculs. Mais leur résultat seront peut-être parfois trop précis, donc il faudra les arrondir ! Dans l'exemple suivant on va faire un calcul puis l'afficher une première fois sans l'arrondir puis un autre fois arrondi.</p>

```{python}
# Calcul
resultat = 10 / 3

# Affichage
print(f"Le résultat pas arrondi est {resultat}")

# Arrondi à deux chiffres après la virgule

print(f"Le résultat arrondi est : {resultat:.2f}")
```

<p id=textIntro>Vous êtes maintenant un pro des commentaires et de l'affichage ! <a href=struct_controle.qmd>Cliquez-ici</a> pour passer à la suite.</p>